{"ast":null,"code":"import _toConsumableArray from\"/Users/kylestrong/WebstormProjects/chatgpt-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/kylestrong/WebstormProjects/chatgpt-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/kylestrong/WebstormProjects/chatgpt-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/kylestrong/WebstormProjects/chatgpt-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),previousChats=_useState6[0],setPreviousChats=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),currentTitle=_useState8[0],setCurrentTitle=_useState8[1];// Create new chat with API\nvar createNewChat=function createNewChat(){setMessage(null);setValue(\"\");setCurrentTitle(null);};// Set title to uniqueTitle and reset message & value\nvar handleClick=function handleClick(uniqueTitle){setCurrentTitle(uniqueTitle);setMessage(null);setValue(\"\");};// Send message to backend and retrieve message from API\nvar getMessages=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var options,response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:options={method:\"POST\",body:JSON.stringify({message:value}),headers:{\"Content-Type\":\"application/json\"}};_context.prev=1;_context.next=4;return fetch('http://localhost:8000/completions',options);case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;// gets message from array sent from API\nsetMessage(data.choices[0].message);_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 14:case\"end\":return _context.stop();}},_callee,null,[[1,11]]);}));return function getMessages(){return _ref.apply(this,arguments);};}();// Set title of chat from first prompt sent to API\nuseEffect(function(){// If no currentTitle, set currentTitle to value\nif(!currentTitle&&value&&message){setCurrentTitle(value);}// If there is a currentTitle, set previousChats to values of array and add objects from chats\nif(currentTitle&&value&&message){setPreviousChats(function(prevChats){return[].concat(_toConsumableArray(prevChats),[{title:currentTitle,role:\"user\",content:value},{title:currentTitle,role:message.role,content:message.content}]);});}// eslint-disable-next-line\n},[message,currentTitle]);// Any object with same title will be included in current chat\nvar currentChat=previousChats.filter(function(previousChat){return previousChat.title===currentTitle;});// Create array of unique titles from objects\nvar uniqueTitles=Array.from(new Set(previousChats.map(function(previousChat){return previousChat.title;})));return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"side-bar\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:createNewChat,children:\"+ New Chat\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"history\",children:uniqueTitles===null||uniqueTitles===void 0?void 0:uniqueTitles.map(function(uniqueTitle,index){return/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){return handleClick(uniqueTitle);},children:uniqueTitle},index);})}),/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Made by Kyle\"})})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"main\",children:[!currentTitle&&/*#__PURE__*/_jsx(\"h1\",{children:\"KyleGPT\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"feed\",children:currentChat===null||currentChat===void 0?void 0:currentChat.map(function(chatMessage,index){return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"role\",children:chatMessage.role}),/*#__PURE__*/_jsx(\"p\",{children:chatMessage.content})]},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bottom-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{value:value,onChange:function onChange(e){return setValue(e.target.value);}}),/*#__PURE__*/_jsx(\"div\",{id:\"submit\",onClick:getMessages,children:\"\\u27A2\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"info\",children:\"KyleGPT 2023 Version. Free Research Preview. Our goal is to make AI systems more natural and safe to interact with. Your feedback will help us improve.\"})]})]})]});};export default App;","map":{"version":3,"names":["useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","message","setMessage","_useState5","_useState6","previousChats","setPreviousChats","_useState7","_useState8","currentTitle","setCurrentTitle","createNewChat","handleClick","uniqueTitle","getMessages","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","response","data","wrap","_callee$","_context","prev","next","method","body","JSON","stringify","headers","fetch","sent","json","choices","t0","console","error","stop","apply","arguments","prevChats","concat","_toConsumableArray","title","role","content","currentChat","filter","previousChat","uniqueTitles","Array","from","Set","map","className","children","onClick","index","chatMessage","onChange","e","target","id"],"sources":["/Users/kylestrong/WebstormProjects/chatgpt-app/src/App.js"],"sourcesContent":["import { useState, useEffect} from \"react\";\n\nconst App = ()  => {\n  const [ value, setValue] = useState(\"\")\n  const [ message, setMessage ] = useState(null)\n  const [ previousChats, setPreviousChats ] = useState([])\n  const [ currentTitle, setCurrentTitle ] = useState(null)\n\n  // Create new chat with API\n  const createNewChat = () => {\n    setMessage(null)\n    setValue(\"\")\n    setCurrentTitle(null)\n  }\n\n  // Set title to uniqueTitle and reset message & value\n  const handleClick = (uniqueTitle) => {\n    setCurrentTitle(uniqueTitle)\n    setMessage(null)\n    setValue(\"\")\n  }\n\n  // Send message to backend and retrieve message from API\n  const getMessages = async () => {\n    const options = {\n      method:\"POST\",\n      body:JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n    try {\n      const response = await fetch('http://localhost:8000/completions', options)\n      const data = await response.json()\n      // gets message from array sent from API\n      setMessage(data.choices[0].message)\n    }catch(error){\n      console.error(error)\n    }\n  }\n\n  // Set title of chat from first prompt sent to API\n  useEffect(() => {\n    // If no currentTitle, set currentTitle to value\n    if(!currentTitle && value && message) {\n      setCurrentTitle(value)\n    }\n    // If there is a currentTitle, set previousChats to values of array and add objects from chats\n    if (currentTitle && value && message) {\n    setPreviousChats(prevChats => (\n        [...prevChats,\n          {\n            title: currentTitle,\n            role: \"user\",\n            content: value\n          },\n          {\n            title: currentTitle,\n            role: message.role,\n            content: message.content\n          }]\n    ))\n    }\n    // eslint-disable-next-line\n  }, [message, currentTitle]);\n\n  // Any object with same title will be included in current chat\n  const currentChat = previousChats.filter(previousChat => previousChat.title === currentTitle)\n  // Create array of unique titles from objects\n  const uniqueTitles = Array.from(new Set(previousChats.map(previousChat => previousChat.title)))\n\n  return (\n    <div className=\"app\">\n    <section className=\"side-bar\">\n      <button onClick={createNewChat}>+ New Chat</button>\n      <ul className=\"history\">\n        {/* Display array values of unique titles for previous chats */}\n        {uniqueTitles?.map((uniqueTitle, index) => <li key={index} onClick={() =>handleClick(uniqueTitle)}>{uniqueTitle}</li>)}\n      </ul>\n      <nav>\n        <p>Made by Kyle</p>\n      </nav>\n    </section>\n      <section className=\"main\">\n        {!currentTitle && <h1>KyleGPT</h1>}\n        <ul className=\"feed\">\n          {/*Create new array of user and assistant values to display in feed*/}\n          {currentChat?.map((chatMessage, index) => <li key={index}>\n              <p className=\"role\">{chatMessage.role}</p>\n              <p>{chatMessage.content}</p>\n          </li>)}\n        </ul>\n        <div className=\"bottom-section\">\n          <div className=\"input-container\">\n            {/* Override \"value\" if input is changed */}\n            <input value={value} onChange={(e) => setValue(e.target.value)}/>\n            <div id=\"submit\" onClick={getMessages}>âž¢</div>\n          </div>\n          <p className=\"info\">\n            KyleGPT 2023 Version. Free Research Preview.\n            Our goal is to make AI systems more natural and safe to interact with.\n            Your feedback will help us improve.\n          </p>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"wiBAAA,OAASA,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3C,GAAM,CAAAC,GAAG,CAAG,QAAN,CAAAA,GAAGA,CAAA,CAAU,CACjB,IAAAC,SAAA,CAA2BP,QAAQ,CAAC,EAAE,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACvB,IAAAI,UAAA,CAAgCZ,QAAQ,CAAC,IAAI,CAAC,CAAAa,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAtCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAC3B,IAAAG,UAAA,CAA4ChB,QAAQ,CAAC,EAAE,CAAC,CAAAiB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAhDE,aAAa,CAAAD,UAAA,IAAEE,gBAAgB,CAAAF,UAAA,IACvC,IAAAG,UAAA,CAA0CpB,QAAQ,CAAC,IAAI,CAAC,CAAAqB,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAAhDE,YAAY,CAAAD,UAAA,IAAEE,eAAe,CAAAF,UAAA,IAErC;AACA,GAAM,CAAAG,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1BT,UAAU,CAAC,IAAI,CAAC,CAChBJ,QAAQ,CAAC,EAAE,CAAC,CACZY,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAED;AACA,GAAM,CAAAE,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,WAAW,CAAK,CACnCH,eAAe,CAACG,WAAW,CAAC,CAC5BX,UAAU,CAAC,IAAI,CAAC,CAChBJ,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED;AACA,GAAM,CAAAgB,WAAW,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,OAAA,CAAAC,QAAA,CAAAC,IAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACZP,OAAO,CAAG,CACdQ,MAAM,CAAC,MAAM,CACbC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC,CAClB9B,OAAO,CAAEJ,KACX,CAAC,CAAC,CACFmC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAAP,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAEwB,CAAAM,KAAK,CAAC,mCAAmC,CAAEb,OAAO,CAAC,QAApEC,QAAQ,CAAAI,QAAA,CAAAS,IAAA,CAAAT,QAAA,CAAAE,IAAA,SACK,CAAAN,QAAQ,CAACc,IAAI,CAAC,CAAC,QAA5Bb,IAAI,CAAAG,QAAA,CAAAS,IAAA,CACV;AACAhC,UAAU,CAACoB,IAAI,CAACc,OAAO,CAAC,CAAC,CAAC,CAACnC,OAAO,CAAC,CAAAwB,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAY,EAAA,CAAAZ,QAAA,aAEnCa,OAAO,CAACC,KAAK,CAAAd,QAAA,CAAAY,EAAM,CAAC,0BAAAZ,QAAA,CAAAe,IAAA,MAAArB,OAAA,iBAEvB,kBAlBK,CAAAL,WAAWA,CAAA,SAAAC,IAAA,CAAA0B,KAAA,MAAAC,SAAA,OAkBhB,CAED;AACAtD,SAAS,CAAC,UAAM,CACd;AACA,GAAG,CAACqB,YAAY,EAAIZ,KAAK,EAAII,OAAO,CAAE,CACpCS,eAAe,CAACb,KAAK,CAAC,CACxB,CACA;AACA,GAAIY,YAAY,EAAIZ,KAAK,EAAII,OAAO,CAAE,CACtCK,gBAAgB,CAAC,SAAAqC,SAAS,WAAAC,MAAA,CAAAC,kBAAA,CAClBF,SAAS,GACX,CACEG,KAAK,CAAErC,YAAY,CACnBsC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAEnD,KACX,CAAC,CACD,CACEiD,KAAK,CAAErC,YAAY,CACnBsC,IAAI,CAAE9C,OAAO,CAAC8C,IAAI,CAClBC,OAAO,CAAE/C,OAAO,CAAC+C,OACnB,CAAC,IACN,CAAC,CACF,CACA;AACF,CAAC,CAAE,CAAC/C,OAAO,CAAEQ,YAAY,CAAC,CAAC,CAE3B;AACA,GAAM,CAAAwC,WAAW,CAAG5C,aAAa,CAAC6C,MAAM,CAAC,SAAAC,YAAY,QAAI,CAAAA,YAAY,CAACL,KAAK,GAAKrC,YAAY,GAAC,CAC7F;AACA,GAAM,CAAA2C,YAAY,CAAGC,KAAK,CAACC,IAAI,CAAC,GAAI,CAAAC,GAAG,CAAClD,aAAa,CAACmD,GAAG,CAAC,SAAAL,YAAY,QAAI,CAAAA,YAAY,CAACL,KAAK,GAAC,CAAC,CAAC,CAE/F,mBACEtD,KAAA,QAAKiE,SAAS,CAAC,KAAK,CAAAC,QAAA,eACpBlE,KAAA,YAASiE,SAAS,CAAC,UAAU,CAAAC,QAAA,eAC3BpE,IAAA,WAAQqE,OAAO,CAAEhD,aAAc,CAAA+C,QAAA,CAAC,YAAU,CAAQ,CAAC,cACnDpE,IAAA,OAAImE,SAAS,CAAC,SAAS,CAAAC,QAAA,CAEpBN,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEI,GAAG,CAAC,SAAC3C,WAAW,CAAE+C,KAAK,qBAAKtE,IAAA,OAAgBqE,OAAO,CAAE,SAAAA,QAAA,QAAK,CAAA/C,WAAW,CAACC,WAAW,CAAC,EAAC,CAAA6C,QAAA,CAAE7C,WAAW,EAA3D+C,KAAgE,CAAC,GAAC,CACpH,CAAC,cACLtE,IAAA,QAAAoE,QAAA,cACEpE,IAAA,MAAAoE,QAAA,CAAG,cAAY,CAAG,CAAC,CAChB,CAAC,EACC,CAAC,cACRlE,KAAA,YAASiE,SAAS,CAAC,MAAM,CAAAC,QAAA,EACtB,CAACjD,YAAY,eAAInB,IAAA,OAAAoE,QAAA,CAAI,SAAO,CAAI,CAAC,cAClCpE,IAAA,OAAImE,SAAS,CAAC,MAAM,CAAAC,QAAA,CAEjBT,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEO,GAAG,CAAC,SAACK,WAAW,CAAED,KAAK,qBAAKpE,KAAA,OAAAkE,QAAA,eACtCpE,IAAA,MAAGmE,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAEG,WAAW,CAACd,IAAI,CAAI,CAAC,cAC1CzD,IAAA,MAAAoE,QAAA,CAAIG,WAAW,CAACb,OAAO,CAAI,CAAC,GAFmBY,KAG/C,CAAC,GAAC,CACJ,CAAC,cACLpE,KAAA,QAAKiE,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BlE,KAAA,QAAKiE,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAE9BpE,IAAA,UAAOO,KAAK,CAAEA,KAAM,CAACiE,QAAQ,CAAE,SAAAA,SAACC,CAAC,QAAK,CAAAjE,QAAQ,CAACiE,CAAC,CAACC,MAAM,CAACnE,KAAK,CAAC,EAAC,CAAC,CAAC,cACjEP,IAAA,QAAK2E,EAAE,CAAC,QAAQ,CAACN,OAAO,CAAE7C,WAAY,CAAA4C,QAAA,CAAC,QAAC,CAAK,CAAC,EAC3C,CAAC,cACNpE,IAAA,MAAGmE,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,yJAIpB,CAAG,CAAC,EACD,CAAC,EACC,CAAC,EACP,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjE,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}