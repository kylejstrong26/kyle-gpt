{"ast":null,"code":"var _jsxFileName = \"/Users/kylestrong/WebstormProjects/chatgpt-app/src/App.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect} from \"react\";\n//\n// const App = ()  => {\n//   const [ value, setValue] = useState(null)\n//   const [ message, setMessage ] = useState(null)\n//   const [ previousChats, setPreviousChats ] = useState([])\n//   const [ currentTitle, setCurrentTitle ] = useState(null)\n//\n//   const createNewChat = () => {\n//     setMessage(null)\n//     setValue(\"\")\n//     setCurrentTitle(null)\n//   }\n//\n//   const handleClick = (uniqueTitle) => {\n//     setCurrentTitle(uniqueTitle)\n//     setMessage(null)\n//     setValue(\"\")\n//   }\n//\n//   const getMessages = async () => {\n//     const options = {\n//       method:\"POST\",\n//       body:JSON.stringify({\n//         message: value\n//       }),\n//       headers: {\n//         \"Content-Type\": \"application/json\"\n//       }\n//     }\n//     try {\n//       const response = await fetch('http://localhost:8000/completions', options)\n//       const data = await response.json()\n//       setMessage(data.choices[0].message)\n//     }catch(error){\n//       console.error(error)\n//     }\n//   }\n//\n//   useEffect(() => {\n//     // console.log(currentTitle, value, message)\n//     if(!currentTitle && value && message) {\n//       setCurrentTitle((value))\n//     }\n//     if (currentTitle && value && message) {\n//     setPreviousChats(previousChats => (\n//         [...previousChats,\n//           {\n//             title: currentTitle,\n//             role: \"user\",\n//             content: value\n//           },\n//           {\n//             title: currentTitle,\n//             role: message.role,\n//             content: message.content\n//           }]\n//     ))\n//     }\n//   }, [message, currentTitle, value]);\n//\n//   console.log(previousChats)\n//\n//   const currentChat = previousChats.filter(previousChat => previousChat.title === currentTitle)\n//   const uniqueTitles = Array.from(new Set(previousChats.map(previousChat => previousChat.title)))\n//\n//   return (\n//     <div className=\"app\">\n//     <section className=\"side-bar\">\n//       <button onClick={createNewChat}>+ New Chat</button>\n//       <ul className=\"history\">\n//         {uniqueTitles?.map((uniqueTitle, index) => <li key={index} onClick={() =>handleClick(uniqueTitle)}>{uniqueTitle}</li>)}\n//       </ul>\n//       <nav>\n//         <p>Made by Kyle</p>\n//       </nav>\n//     </section>\n//       <section className=\"main\">\n//         {!currentTitle && <h1>KyleGPT</h1>}\n//         <ul className=\"feed\">\n//           {currentChat?.map((chatMessage, index) => <li key={index}>\n//               <p className=\"role\">{chatMessage.role}</p>\n//               <p>{chatMessage.content}</p>\n//           </li>)}\n//         </ul>\n//         <div className=\"bottom-section\">\n//           <div className=\"input-container\">\n//             <input value={value} onChange={(e ) => setValue(e.target.value)}/>\n//             <div id=\"submit\" onClick={getMessages}>âž¢</div>\n//           </div>\n//           <p className=\"info\">\n//             ChatGPT Oct 23 Version. Free Research Preview.\n//             Our goal is to make AI systems more natural and safe to interact with.\n//             Your feedback will help us improve.\n//           </p>\n//         </div>\n//       </section>\n//     </div>\n//   );\n// }\n//\n// export default App;\n//\n//\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [value, setValue] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [previousChats, setPreviousChats] = useState([]);\n  const [currentTitle, setCurrentTitle] = useState(null);\n  const createNewChat = () => {\n    setMessage(null);\n    setValue(\"\");\n    setCurrentTitle(null);\n  };\n  const handleClick = uniqueTitle => {\n    setCurrentTitle(uniqueTitle);\n    setMessage(null);\n    setValue(\"\");\n  };\n  const getMessages = async () => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const response = await fetch('http://localhost:8000/completions', options);\n      const data = await response.json();\n      setMessage(data.choices[0].message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    if (!currentTitle && value && message) {\n      setCurrentTitle(value);\n    }\n    if (currentTitle && value && message) {\n      setPreviousChats(previousChats => [...previousChats, {\n        title: currentTitle,\n        role: \"user\",\n        content: value\n      }, {\n        title: currentTitle,\n        role: message.role,\n        content: message.content\n      }]);\n    }\n  }, [message, currentTitle, value]);\n  const currentChat = previousChats.filter(previousChat => previousChat.title === currentTitle);\n  const uniqueTitles = Array.from(new Set(previousChats.map(previousChat => previousChat.title)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"side-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createNewChat,\n        \"aria-label\": \"Start new chat\",\n        children: \"+ New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"history\",\n        role: \"navigation\",\n        \"aria-label\": \"Chat History\",\n        children: uniqueTitles === null || uniqueTitles === void 0 ? void 0 : uniqueTitles.map((uniqueTitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleClick(uniqueTitle),\n          children: uniqueTitle\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Made by Kyle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [!currentTitle && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"KyleGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"feed\",\n        role: \"list\",\n        \"aria-label\": \"Current Chat\",\n        children: currentChat === null || currentChat === void 0 ? void 0 : currentChat.map((chatMessage, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"role\",\n            children: chatMessage.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: chatMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 55\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"chatInput\",\n            className: \"sr-only\",\n            children: \"Type message here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"chatInput\",\n            value: value,\n            onChange: e => setValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"submit\",\n            onClick: getMessages,\n            \"aria-label\": \"Send Message\",\n            children: \"\\u27A2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info\",\n          children: \"ChatGPT Oct 23 Version. Free Research Preview. Our goal is to make AI systems more natural and safe to interact with. Your feedback will help us improve.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"qJeY4W37zrvSdXp+7Ub3hbOhwqk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","value","setValue","message","setMessage","previousChats","setPreviousChats","currentTitle","setCurrentTitle","createNewChat","handleClick","uniqueTitle","getMessages","options","method","body","JSON","stringify","headers","response","fetch","data","json","choices","error","console","title","role","content","currentChat","filter","previousChat","uniqueTitles","Array","from","Set","map","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","index","chatMessage","for","id","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/kylestrong/WebstormProjects/chatgpt-app/src/App.js"],"sourcesContent":["// import { useState, useEffect} from \"react\";\n//\n// const App = ()  => {\n//   const [ value, setValue] = useState(null)\n//   const [ message, setMessage ] = useState(null)\n//   const [ previousChats, setPreviousChats ] = useState([])\n//   const [ currentTitle, setCurrentTitle ] = useState(null)\n//\n//   const createNewChat = () => {\n//     setMessage(null)\n//     setValue(\"\")\n//     setCurrentTitle(null)\n//   }\n//\n//   const handleClick = (uniqueTitle) => {\n//     setCurrentTitle(uniqueTitle)\n//     setMessage(null)\n//     setValue(\"\")\n//   }\n//\n//   const getMessages = async () => {\n//     const options = {\n//       method:\"POST\",\n//       body:JSON.stringify({\n//         message: value\n//       }),\n//       headers: {\n//         \"Content-Type\": \"application/json\"\n//       }\n//     }\n//     try {\n//       const response = await fetch('http://localhost:8000/completions', options)\n//       const data = await response.json()\n//       setMessage(data.choices[0].message)\n//     }catch(error){\n//       console.error(error)\n//     }\n//   }\n//\n//   useEffect(() => {\n//     // console.log(currentTitle, value, message)\n//     if(!currentTitle && value && message) {\n//       setCurrentTitle((value))\n//     }\n//     if (currentTitle && value && message) {\n//     setPreviousChats(previousChats => (\n//         [...previousChats,\n//           {\n//             title: currentTitle,\n//             role: \"user\",\n//             content: value\n//           },\n//           {\n//             title: currentTitle,\n//             role: message.role,\n//             content: message.content\n//           }]\n//     ))\n//     }\n//   }, [message, currentTitle, value]);\n//\n//   console.log(previousChats)\n//\n//   const currentChat = previousChats.filter(previousChat => previousChat.title === currentTitle)\n//   const uniqueTitles = Array.from(new Set(previousChats.map(previousChat => previousChat.title)))\n//\n//   return (\n//     <div className=\"app\">\n//     <section className=\"side-bar\">\n//       <button onClick={createNewChat}>+ New Chat</button>\n//       <ul className=\"history\">\n//         {uniqueTitles?.map((uniqueTitle, index) => <li key={index} onClick={() =>handleClick(uniqueTitle)}>{uniqueTitle}</li>)}\n//       </ul>\n//       <nav>\n//         <p>Made by Kyle</p>\n//       </nav>\n//     </section>\n//       <section className=\"main\">\n//         {!currentTitle && <h1>KyleGPT</h1>}\n//         <ul className=\"feed\">\n//           {currentChat?.map((chatMessage, index) => <li key={index}>\n//               <p className=\"role\">{chatMessage.role}</p>\n//               <p>{chatMessage.content}</p>\n//           </li>)}\n//         </ul>\n//         <div className=\"bottom-section\">\n//           <div className=\"input-container\">\n//             <input value={value} onChange={(e ) => setValue(e.target.value)}/>\n//             <div id=\"submit\" onClick={getMessages}>âž¢</div>\n//           </div>\n//           <p className=\"info\">\n//             ChatGPT Oct 23 Version. Free Research Preview.\n//             Our goal is to make AI systems more natural and safe to interact with.\n//             Your feedback will help us improve.\n//           </p>\n//         </div>\n//       </section>\n//     </div>\n//   );\n// }\n//\n// export default App;\n//\n//\n\n\nimport { useState, useEffect} from \"react\";\n\nconst App = ()  => {\n  const [ value, setValue] = useState(null)\n  const [ message, setMessage ] = useState(null)\n  const [ previousChats, setPreviousChats ] = useState([])\n  const [ currentTitle, setCurrentTitle ] = useState(null)\n\n  const createNewChat = () => {\n    setMessage(null)\n    setValue(\"\")\n    setCurrentTitle(null)\n  }\n\n  const handleClick = (uniqueTitle) => {\n    setCurrentTitle(uniqueTitle)\n    setMessage(null)\n    setValue(\"\")\n  }\n\n  const getMessages = async () => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n    try {\n      const response = await fetch('http://localhost:8000/completions', options)\n      const data = await response.json()\n      setMessage(data.choices[0].message)\n    } catch(error){\n      console.error(error)\n    }\n  }\n\n  useEffect(() => {\n    if(!currentTitle && value && message){\n      setCurrentTitle((value))\n    }\n    if (currentTitle && value && message){\n      setPreviousChats(previousChats => (\n          [...previousChats,\n            {\n              title: currentTitle,\n              role: \"user\",\n              content: value\n            },\n            {\n              title: currentTitle,\n              role: message.role,\n              content: message.content\n            }]\n      ))\n    }\n  }, [message, currentTitle, value]);\n\n  const currentChat = previousChats.filter(previousChat => previousChat.title === currentTitle)\n  const uniqueTitles = Array.from(new Set(previousChats.map(previousChat => previousChat.title)))\n\n  return (\n      <div className=\"app\">\n        <aside className=\"side-bar\">\n          <button onClick={createNewChat} aria-label=\"Start new chat\">+ New Chat</button>\n          <ul className=\"history\" role=\"navigation\" aria-label=\"Chat History\">\n            {uniqueTitles?.map((uniqueTitle, index) =>\n                <li key={index} onClick={() =>handleClick(uniqueTitle)}>{uniqueTitle}</li>)}\n          </ul>\n          <nav>\n            <p>Made by Kyle</p>\n          </nav>\n        </aside>\n        <main className=\"main\">\n          {/* Added \"role\" and \"aria-label\" for screen readers */}\n          {!currentTitle && <h1>KyleGPT</h1>}\n          <ul className=\"feed\" role=\"list\" aria-label=\"Current Chat\">\n            {currentChat?.map((chatMessage, index) => <li key={index}>\n              <span className=\"role\">{chatMessage.role}</span>\n              <span>{chatMessage.content}</span>\n            </li>)}\n          </ul>\n          <div className=\"bottom-section\">\n            <div className=\"input-container\">\n              {/* Added hidden label for accessibility */}\n              <label for=\"chatInput\" className=\"sr-only\">Type message here</label>\n              <input id=\"chatInput\" value={value} onChange={(e ) => setValue(e.target.value)}/>\n              <button id=\"submit\" onClick={getMessages} aria-label=\"Send Message\">âž¢</button>\n            </div>\n            <p className=\"info\">\n              ChatGPT Oct 23 Version. Free Research Preview.\n              Our goal is to make AI systems more natural and safe to interact with.\n              Your feedback will help us improve.\n            </p>\n          </div>\n        </main>\n      </div>\n  );\n}\n\nexport default App;"],"mappingsjB,MAAM,CAAEC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACzC,MAAM,CAAEQ,OAAO,EAAEC,UAAU,CAAE,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAEU,aAAa,EAAEC,gBAAgB,CAAE,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAEY,YAAY,EAAEC,eAAe,CAAE,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMc,aAAa,GAAGA,CAAA,KAAM;IAC1BL,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,EAAE,CAAC;IACZM,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAME,WAAW,GAAIC,WAAW,IAAK;IACnCH,eAAe,CAACG,WAAW,CAAC;IAC5BP,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBd,OAAO,EAAEF;MACX,CAAC,CAAC;MACFiB,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IACD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAEP,OAAO,CAAC;MAC1E,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClClB,UAAU,CAACiB,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACpB,OAAO,CAAC;IACrC,CAAC,CAAC,OAAMqB,KAAK,EAAC;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED5B,SAAS,CAAC,MAAM;IACd,IAAG,CAACW,YAAY,IAAIN,KAAK,IAAIE,OAAO,EAAC;MACnCK,eAAe,CAAEP,KAAM,CAAC;IAC1B;IACA,IAAIM,YAAY,IAAIN,KAAK,IAAIE,OAAO,EAAC;MACnCG,gBAAgB,CAACD,aAAa,IAC1B,CAAC,GAAGA,aAAa,EACf;QACEqB,KAAK,EAAEnB,YAAY;QACnBoB,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE3B;MACX,CAAC,EACD;QACEyB,KAAK,EAAEnB,YAAY;QACnBoB,IAAI,EAAExB,OAAO,CAACwB,IAAI;QAClBC,OAAO,EAAEzB,OAAO,CAACyB;MACnB,CAAC,CACN,CAAC;IACJ;EACF,CAAC,EAAE,CAACzB,OAAO,EAAEI,YAAY,EAAEN,KAAK,CAAC,CAAC;EAElC,MAAM4B,WAAW,GAAGxB,aAAa,CAACyB,MAAM,CAACC,YAAY,IAAIA,YAAY,CAACL,KAAK,KAAKnB,YAAY,CAAC;EAC7F,MAAMyB,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAAC9B,aAAa,CAAC+B,GAAG,CAACL,YAAY,IAAIA,YAAY,CAACL,KAAK,CAAC,CAAC,CAAC;EAE/F,oBACI5B,OAAA;IAAKuC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxC,OAAA;MAAOuC,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACzBxC,OAAA;QAAQyC,OAAO,EAAE9B,aAAc;QAAC,cAAW,gBAAgB;QAAA6B,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/E7C,OAAA;QAAIuC,SAAS,EAAC,SAAS;QAACV,IAAI,EAAC,YAAY;QAAC,cAAW,cAAc;QAAAW,QAAA,EAChEN,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEI,GAAG,CAAC,CAACzB,WAAW,EAAEiC,KAAK,kBAClC9C,OAAA;UAAgByC,OAAO,EAAEA,CAAA,KAAK7B,WAAW,CAACC,WAAW,CAAE;UAAA2B,QAAA,EAAE3B;QAAW,GAA3DiC,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA2D,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC,eACL7C,OAAA;QAAAwC,QAAA,eACExC,OAAA;UAAAwC,QAAA,EAAG;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACR7C,OAAA;MAAMuC,SAAS,EAAC,MAAM;MAAAC,QAAA,GAEnB,CAAC/B,YAAY,iBAAIT,OAAA;QAAAwC,QAAA,EAAI;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClC7C,OAAA;QAAIuC,SAAS,EAAC,MAAM;QAACV,IAAI,EAAC,MAAM;QAAC,cAAW,cAAc;QAAAW,QAAA,EACvDT,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEO,GAAG,CAAC,CAACS,WAAW,EAAED,KAAK,kBAAK9C,OAAA;UAAAwC,QAAA,gBACxCxC,OAAA;YAAMuC,SAAS,EAAC,MAAM;YAAAC,QAAA,EAAEO,WAAW,CAAClB;UAAI;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChD7C,OAAA;YAAAwC,QAAA,EAAOO,WAAW,CAACjB;UAAO;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAFeC,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGpD,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACL7C,OAAA;QAAKuC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BxC,OAAA;UAAKuC,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAE9BxC,OAAA;YAAOgD,GAAG,EAAC,WAAW;YAACT,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpE7C,OAAA;YAAOiD,EAAE,EAAC,WAAW;YAAC9C,KAAK,EAAEA,KAAM;YAAC+C,QAAQ,EAAGC,CAAC,IAAM/C,QAAQ,CAAC+C,CAAC,CAACC,MAAM,CAACjD,KAAK;UAAE;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACjF7C,OAAA;YAAQiD,EAAE,EAAC,QAAQ;YAACR,OAAO,EAAE3B,WAAY;YAAC,cAAW,cAAc;YAAA0B,QAAA,EAAC;UAAC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC,eACN7C,OAAA;UAAGuC,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAIpB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ,CAAC;AAAA3C,EAAA,CAlGKD,GAAG;AAAAoD,EAAA,GAAHpD,GAAG;AAoGT,eAAeA,GAAG;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}