{"ast":null,"code":"var _jsxFileName = \"/Users/kylestrong/WebstormProjects/chatgpt-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [submitClicked, setSubmitClicked] = useState(false);\n  const [value, setValue] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [previousChats, setPreviousChats] = useState([]);\n  const [currentTitle, setCurrentTitle] = useState(null);\n  const createNewChat = () => {\n    setMessage(null);\n    setValue(\"\");\n    setCurrentTitle(null);\n  };\n  const handleClick = uniqueTitle => {\n    setCurrentTitle(uniqueTitle);\n    setMessage(null);\n    setValue(\"\");\n  };\n  const getMessages = async () => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const response = await fetch('http://localhost:8000/completions', options);\n      const data = await response.json();\n      setMessage(data.choices[0].message);\n      setSubmitClicked(true);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // useEffect(() => {\n  //   // console.log(currentTitle, value, message)\n  //   if(!currentTitle && value && message) {\n  //     setCurrentTitle((value))\n  //   }\n  //   if (currentTitle && value && message) {\n  //   setPreviousChats(previousChats => (\n  //       [...previousChats,\n  //         {\n  //           title: currentTitle,\n  //           role: \"user\",\n  //           content: value\n  //         },\n  //         {\n  //           title: currentTitle,\n  //           role: message.role,\n  //           content: message.content\n  //         }]\n  //   ))\n  //   }\n  // }, [message, currentTitle, value]);\n\n  useEffect(() => {\n    // Check if submit button is clicked\n    if (submitClicked && currentTitle && value && message) {\n      setPreviousChats(previousChats => [...previousChats, {\n        title: currentTitle,\n        role: \"user\",\n        content: value\n      }, {\n        title: currentTitle,\n        role: message.role,\n        content: message.content\n      }]);\n      // Reset submitClicked after updating previousChats\n      setSubmitClicked(false);\n    }\n  }, [message, currentTitle, value, submitClicked]);\n  console.log(previousChats);\n  const currentChat = previousChats.filter(previousChat => previousChat.title === currentTitle);\n  const uniqueTitles = Array.from(new Set(previousChats.map(previousChat => previousChat.title)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"side-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createNewChat,\n        children: \"+ New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"history\",\n        children: uniqueTitles === null || uniqueTitles === void 0 ? void 0 : uniqueTitles.map((uniqueTitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleClick(uniqueTitle),\n          children: uniqueTitle\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 52\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Made by Kyle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      children: [!currentTitle && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"KyleGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"feed\",\n        children: currentChat === null || currentChat === void 0 ? void 0 : currentChat.map((chatMessage, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"role\",\n            children: chatMessage.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: chatMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 53\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: value,\n            onChange: e => setValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"submit\",\n            onClick: getMessages,\n            children: \"\\u27A2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info\",\n          children: \"ChatGPT Oct 23 Version. Free Research Preview. Our goal is to make AI systems more natural and safe to interact with. Your feedback will help us improve.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"349DPuQhV5wUfJWQvBCq8/1Zny4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","submitClicked","setSubmitClicked","value","setValue","message","setMessage","previousChats","setPreviousChats","currentTitle","setCurrentTitle","createNewChat","handleClick","uniqueTitle","getMessages","options","method","body","JSON","stringify","headers","response","fetch","data","json","choices","error","console","title","role","content","log","currentChat","filter","previousChat","uniqueTitles","Array","from","Set","map","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","index","chatMessage","onChange","e","target","id","_c","$RefreshReg$"],"sources":["/Users/kylestrong/WebstormProjects/chatgpt-app/src/App.js"],"sourcesContent":["import { useState, useEffect} from \"react\";\n\nconst App = ()  => {\n  const [submitClicked, setSubmitClicked] = useState(false);\n  const [ value, setValue] = useState(null)\n  const [ message, setMessage ] = useState(null)\n  const [ previousChats, setPreviousChats ] = useState([])\n  const [ currentTitle, setCurrentTitle ] = useState(null)\n\n  const createNewChat = () => {\n    setMessage(null)\n    setValue(\"\")\n    setCurrentTitle(null)\n  }\n\n  const handleClick = (uniqueTitle) => {\n    setCurrentTitle(uniqueTitle)\n    setMessage(null)\n    setValue(\"\")\n  }\n\n  const getMessages = async () => {\n    const options = {\n      method:\"POST\",\n      body:JSON.stringify({\n        message: value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n    try {\n      const response = await fetch('http://localhost:8000/completions', options)\n      const data = await response.json()\n      setMessage(data.choices[0].message)\n      setSubmitClicked(true);\n    }catch(error){\n      console.error(error)\n    }\n  }\n\n  // useEffect(() => {\n  //   // console.log(currentTitle, value, message)\n  //   if(!currentTitle && value && message) {\n  //     setCurrentTitle((value))\n  //   }\n  //   if (currentTitle && value && message) {\n  //   setPreviousChats(previousChats => (\n  //       [...previousChats,\n  //         {\n  //           title: currentTitle,\n  //           role: \"user\",\n  //           content: value\n  //         },\n  //         {\n  //           title: currentTitle,\n  //           role: message.role,\n  //           content: message.content\n  //         }]\n  //   ))\n  //   }\n  // }, [message, currentTitle, value]);\n\n  useEffect(() => {\n    // Check if submit button is clicked\n    if (submitClicked && currentTitle && value && message) {\n      setPreviousChats(previousChats => (\n          [...previousChats,\n            {\n              title: currentTitle,\n              role: \"user\",\n              content: value\n            },\n            {\n              title: currentTitle,\n              role: message.role,\n              content: message.content\n            }]\n      ))\n      // Reset submitClicked after updating previousChats\n      setSubmitClicked(false);\n    }\n  }, [message, currentTitle, value, submitClicked]);\n\n  console.log(previousChats)\n\n  const currentChat = previousChats.filter(previousChat => previousChat.title === currentTitle)\n  const uniqueTitles = Array.from(new Set(previousChats.map(previousChat => previousChat.title)))\n\n  return (\n    <div className=\"app\">\n    <section className=\"side-bar\">\n      <button onClick={createNewChat}>+ New Chat</button>\n      <ul className=\"history\">\n        {uniqueTitles?.map((uniqueTitle, index) => <li key={index} onClick={() =>handleClick(uniqueTitle)}>{uniqueTitle}</li>)}\n      </ul>\n      <nav>\n        <p>Made by Kyle</p>\n      </nav>\n    </section>\n      <section className=\"main\">\n        {!currentTitle && <h1>KyleGPT</h1>}\n        <ul className=\"feed\">\n          {currentChat?.map((chatMessage, index) => <li key={index}>\n              <p className=\"role\">{chatMessage.role}</p>\n              <p>{chatMessage.content}</p>\n          </li>)}\n        </ul>\n        <div className=\"bottom-section\">\n          <div className=\"input-container\">\n            <input value={value} onChange={(e ) => setValue(e.target.value)}/>\n            <div id=\"submit\" onClick={getMessages}>➢</div>\n          </div>\n          <p className=\"info\">\n            ChatGPT Oct 23 Version. Free Research Preview.\n            Our goal is to make AI systems more natural and safe to interact with.\n            Your feedback will help us improve.\n          </p>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}